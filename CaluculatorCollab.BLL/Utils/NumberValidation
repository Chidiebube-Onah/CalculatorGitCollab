using System;

namespace CalculatorCollab.BLL.Utils
{
   public class NumberValidation
{
    public static bool IsEven(int number){
        if(number % 2 == 0) return true;
        return false;
    }

  public static bool IsNumber(string number){
bool isNumber = decimal.TryParse(number, out number);

if (isNumber) return true;
return false;
    }

     public static (bool isZero, string msg) DivideByZeroHandler(int number){
        bool isValidNum = IsNumber(number);
        if(isValidNum){
        if(number <= 0) return (true, $"{number} is greater zero.");
        return (false, $"{number} is less than or equal to zero.");
        }else{
            return (false, $"{number} is not valid.");
        }
     }

///<summary>
/// You can use this method to check if input is empty and access the validation message. Return  a tuple (true: boolean, with a success message) and (false: boolean, error message) when it is not.

///</summary>
    public static (bool isIt, string message) IsBlank(this string stringInput)
    {
        if(string.IsNullOrWhiteSpace(stringInput)) return (true, "The input is empty.");
        return (false, "");
    }

 }
}